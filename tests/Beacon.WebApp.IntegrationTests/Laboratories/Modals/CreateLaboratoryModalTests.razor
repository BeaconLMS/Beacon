@using Beacon.Common.Requests.Laboratories
@using BeaconUI.Core.Laboratories.Modals
@inherits BeaconTestContext
@code  {

    [Fact]
    public void CreateLaboratoryModal_DoesNotCallApi_WhenModelIsInvalid()
    {
        MockApi.Fails<CreateLaboratoryRequest>();

        var sut = RenderModal();
        var modal = ModalService.Show<CreateLaboratoryModal>();

        sut.WaitForElement("form", TimeSpan.FromSeconds(5)).Submit();
        sut.WaitForAssertion(() => sut.Find(".validation-message"));

        MockApi.Verify(x => x.SendAsync(It.IsAny<CreateLaboratoryRequest>(), It.IsAny<CancellationToken>()), Times.Never());
    }

    [Fact]
    public void CreateLaboratoryModal_CallsApi_WhenModelIsValid()
    {
        MockApi.Succeeds<CreateLaboratoryRequest>();

        var sut = RenderModal();
        var modal = ModalService.Show<CreateLaboratoryModal>();

        var form = sut.WaitForElement("form");
        sut.Find("input#lab-name").Change("My New Lab");
        form.Submit();

        sut.WaitForAssertion(() =>
        {
            MockApi.Verify(x => x.SendAsync(It.IsAny<CreateLaboratoryRequest>(), It.IsAny<CancellationToken>()), Times.Once());
        });
    }

}