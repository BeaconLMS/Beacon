@using BeaconUI.Core.Common.Http
@inherits TestContext
@code {

    public Mock<IApiClient> MockApi => Services.GetRequiredService<Mock<IApiClient>>();
    public IModalService ModalService => Services.GetRequiredService<IModalService>();
    public FakeNavigationManager NavigationManager => Services.GetRequiredService<FakeNavigationManager>();

    public BeaconTestContext()
    {
        Initialize();
    }

    protected virtual void Initialize()
    {
        // set up default beacon services:
        Services.AddBeaconUI("localhost");
        this.AddBlazoredLocalStorage();
        JSInterop.SetupModule("./_content/Blazored.Modal/BlazoredModal.razor.js");
        JSInterop.SetupModule("https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js");

        // mock IApiClient so we're not actually calling the API:
        Services.RemoveAll<IApiClient>();
        Services.AddSingleton<Mock<IApiClient>>();
        Services.AddScoped(sp => sp.GetRequiredService<Mock<IApiClient>>().Object);
    }

    protected void UrlShouldBe(string url)
    {
        NavigationManager.Uri.Should().Be(NavigationManager.BaseUri + url);
    }

    protected IRenderedFragment RenderModal()
    {
        JSInterop.Mode = JSRuntimeMode.Loose;
        return Render(@<CascadingValue Value="ModalService"><BlazoredModal /></CascadingValue>);
    }
}
