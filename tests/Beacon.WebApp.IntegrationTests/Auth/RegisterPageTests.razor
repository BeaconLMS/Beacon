@using Beacon.Common.Requests.Auth
@using BeaconUI.Core.Auth
@attribute [Trait("Feature", "User Registration & Login")]
@inherits BeaconTestContext
@code {

    [Fact]
    public void WhenRegistrationIsSuccessful_LogInAndNavigateToHome()
    {
        MockApi.Succeeds<RegisterRequest>();

        var cut = RenderComponent<RegisterPage>();

        // Act:
        cut.Find("input[type=email]").Change("test@test.com");
        cut.Find("input[type=password]").Change("password123");
        cut.Find("form").Submit();

        // Assert:
        cut.WaitForAssertion(() => UrlShouldBe(""), TimeSpan.FromSeconds(5));
    }

    [Fact]
    public void WhenRegistrationIsUnsuccessful_ShowError()
    {
        MockApi.Fails<RegisterRequest>(ErrorOr.Error.Validation(nameof(RegisterRequest.EmailAddress), "Some error message"));

        var cut = RenderComponent<RegisterPage>();

        // Act:
        cut.Find("input[type=email]").Change("test@test.com");
        cut.Find("input[type=password]").Change("password123");
        cut.Find("form").Submit();

        // Assert:
        cut.WaitForAssertion(() => cut.Find(".validation-message").TextContent.Should().Be("Some error message"), TimeSpan.FromSeconds(5));
        NavigationManager.History.Should().BeEmpty();
    }
}