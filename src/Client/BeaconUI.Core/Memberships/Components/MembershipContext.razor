<CascadingValue Value="this">
    @ChildContent?.Invoke(this)
</CascadingValue>

@code {

    [Inject]
    private IApiClient ApiClient { get; set; } = default!;

    [CascadingParameter]
    private ILabContext LabContext { get; set; } = default!;

    [CascadingParameter]
    private IModalService ModalService { get; set; } = default!;

    [Parameter]
    public RenderFragment<MembershipContext>? ChildContent { get; set; }

    public ErrorOr<LaboratoryMemberDto[]>? Result { get; private set; }

    protected override async Task OnParametersSetAsync()
    {
        Result = await ApiClient.SendAsync(new GetMembershipsRequest());
    }

    public bool CanManagePermissions()
    {
        return LabContext.CurrentLab.MembershipType >= LaboratoryMembershipType.Manager;
    }

    public bool CanManagePermissions(LaboratoryMemberDto memberToUpdate)
    {
        return CanManagePermissions()
            && memberToUpdate.Id != LabContext.CurrentUser.Id
            && LabContext.CurrentLab.MembershipType >= memberToUpdate.MembershipType;
    }

    public async Task ShowManagePermissionsModal(LaboratoryMemberDto memberToUpdate)
    {
        var modalParameters = new ModalParameters()
            .Add(nameof(UpdateMembershipTypeModal.MemberToUpdate), memberToUpdate);

        var result = await ModalService.Show<UpdateMembershipTypeModal>("Update Membership", modalParameters).Result;

        if (result.Confirmed)
            Result = await ApiClient.SendAsync(new GetMembershipsRequest());

        StateHasChanged();
    }
}