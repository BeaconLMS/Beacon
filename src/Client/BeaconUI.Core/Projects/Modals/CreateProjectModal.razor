@using BeaconUI.Core.Memberships.Components
@inject ApiClient ApiClient

<BeaconForm Model="Model" OnValidSubmit="Submit">
    <Modal>
        <div class="modal-body">
            <div class="row">
                <div class="field">
                    <label class="form-label" for="customerName">Customer Name</label>
                    <InputText @bind-Value="Model.CustomerName" class="form-control" id="customerName" placeholder="e.g., Acme Corp" />
                    <ValidationMessage For="() => Model.CustomerName" />
                </div>
                <div class="field">
                    <label class="form-label" for="customerCode">Customer Code</label>
                    <InputText @bind-Value="Model.CustomerCode" class="form-control" id="customerCode" placeholder="e.g., ACM" />
                    <ValidationMessage For="() => Model.CustomerCode" />
                </div>
                <div class="field">
                    <label class="form-label" for="member">Lead Analyst</label>
                    <InputSelect @bind-Value="Model.LeadAnalystId" class="form-select" id="member">
                        <option>None</option>
                        <MembershipContext>
                            @if (context.Result is { IsError: false } result)
                            {
                                foreach (var member in result.Value.Where(m => m.MembershipType >= LaboratoryMembershipType.Analyst))
                                {
                                    <option value="@member.Id">@member.DisplayName</option>
                                }
                            }
                        </MembershipContext>
                    </InputSelect>
                    <ValidationMessage For="() => Model.LeadAnalystId" />
                </div>
            </div>
        </div>
        <footer class="modal-footer">
            <SubmitButton class="btn btn-primary">Create Project</SubmitButton>
            <button class="btn btn-secondary" type="button" @onclick="Cancel">Cancel</button>
        </footer>
    </Modal>
</BeaconForm>

@code {

    [CascadingParameter]
    private BlazoredModalInstance Modal { get; set; } = null!;

    private CreateProjectRequest Model { get; } = new();

    private async Task Submit(BeaconForm formContext)
    {
        var result = await ApiClient.CreateProject(Model);

        if (result.IsError)
        {
            formContext.AddErrors(result.Errors);
            return;
        }

        await Modal.CloseAsync(ModalResult.Ok());
    }

    private async Task Cancel() => await Modal.CancelAsync();
}