@page "/laboratories/{Id:guid}/members"
@attribute [Authorize]
@layout LaboratoryLayout

<LaboratoryPageHeader>
    <ButtonsContent>
        <button type="button" class="btn btn-primary" @onclick="ShowInviteMemberModal">
            <span class="icon">
                <i class="fa-solid fa-user-plus"></i>
            </span>
            <span>Invite member</span>
        </button>
    </ButtonsContent>
</LaboratoryPageHeader>
<LaboratoryPageContent>
    <MyLaboratories Context="myLabs">
        @{
            var myMembership = myLabs.FirstOrDefault(m => m.Laboratory.Id == Id);
        }
        <div class="table-responsive h-100">
            <table class="table align-middle">
                <thead>
                    <tr>
                        <th>Display Name</th>
                        <th>Email Address</th>
                        <th>Role</th>
                        <th style="width: 0%;"></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var member in Details.Members)
                    {
                        <tr>
                            <td>@member.DisplayName</td>
                            <td>
                                <a href="mailto:@member.EmailAddress">@member.EmailAddress</a>
                            </td>
                            <td>@member.MembershipType</td>
                            <td>
                                <div class="dropdown">
                                    <button class="btn btn-small" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                        <span class="icon">
                                            <i class="fa-solid fa-ellipsis-vertical"></i>
                                        </span>
                                    </button>
                                    <ul class="dropdown-menu">
                                        <li>
                                            @if (CanManagePermissions(myMembership, member))
                                            {
                                                <button class="dropdown-item" type="button" @onclick="() => ShowManagePermissionsModal(member)">
                                                    <span class="icon">
                                                        <i class="fa-regular fa-pencil"></i>
                                                    </span>
                                                    <span>Manage Permissions</span>
                                                </button>
                                            }
                                            else
                                            {
                                                <div class="dropdown-item disabled">
                                                    <span class="icon">
                                                        <i class="fa-regular fa-pencil"></i>
                                                    </span>
                                                    <span>Manage Permissions</span>
                                                </div>
                                            }
                                        </li>
                                    </ul>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </MyLaboratories>
</LaboratoryPageContent>

@code {

    [Parameter] public Guid Id { get; set; }
    [CascadingParameter] public required LaboratoryDetailDto Details { get; set; }
    [CascadingParameter] private IModalService ModalService { get; set; } = null!;

    private bool CanManagePermissions(LaboratoryMembershipDto? myMembership, LaboratoryMemberDto memberToUpdate)
    {
        if (myMembership is null || myMembership.Member.Id == memberToUpdate.Id)
            return false;

        if (myMembership.MembershipType is LaboratoryMembershipType.Admin)
            return true;

        return memberToUpdate.MembershipType is not LaboratoryMembershipType.Admin;
    }

    private async Task ShowInviteMemberModal()
    {
        var modalParameters = new ModalParameters()
            .Add(nameof(InviteMemberForm.LaboratoryId), Id);

        await ModalService.Show<InviteMemberForm>("Invite Lab Member", modalParameters).Result;
    }

    private async Task ShowManagePermissionsModal(LaboratoryMemberDto memberToUpdate)
    {
        var modalParameters = new ModalParameters()
            .Add(nameof(UpdateMembershipTypeForm.MemberToUpdate), new LaboratoryMembershipDto
            {
                Laboratory = new LaboratoryDto { Id = Details.Id, Name = Details.Name },
                Member = memberToUpdate.ToUserDto(),
                MembershipType = memberToUpdate.MembershipType
            });

        await ModalService.Show<UpdateMembershipTypeForm>("Update Membership", modalParameters).Result;
    }
}