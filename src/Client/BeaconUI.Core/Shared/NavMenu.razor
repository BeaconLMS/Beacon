@inject CurrentUserLabMembershipService MembershipService
@implements IDisposable

<div class="nav-scrollable">
    <nav class="d-flex flex-column">
        @foreach (var membership in _memberships)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="@membership.LaboratorySlug" Match="NavLinkMatch.All">
                    <span class="icon" aria-hidden="true">
                        <i class="fa-regular fa-flask"></i>
                    </span>
                    <span>@membership.LaboratoryName</span>
                </NavLink>
            </div>
        }
        <div class="nav-item px-3">
            <a href="new-lab">New laboratory</a>
        </div>
    </nav>
</div>

@code {

    private IReadOnlyList<LaboratoryMembershipDto> _memberships = new List<LaboratoryMembershipDto>();

    public void Dispose()
    {
        MembershipService.OnMembershipsChanged -= UpdateMemberships;
    }

    protected override async Task OnInitializedAsync()
    {
        MembershipService.OnMembershipsChanged += UpdateMemberships;
        _memberships = await MembershipService.GetMemberships();
    }

    private void UpdateMemberships(IReadOnlyList<LaboratoryMembershipDto> memberships)
    {
        _memberships = memberships;
        StateHasChanged();
    }
}
